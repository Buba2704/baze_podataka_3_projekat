/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.stavkaZapisnikaOPrijemuMaterijala;

import controller.ClientController;
import domain.JedinicaMere;
import domain.Proizvod;
import domain.StavkaZapisnikaOPrijemuMaterijala;
import forme.FormMain;
import forme.istorijaStanjaZaliha.FormUnosIstorijeStanja;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;




public class FormIzmenaStavkeZOPM extends javax.swing.JDialog {
    
    private StavkaZapisnikaOPrijemuMaterijala s;
    private Proizvod p;
    FormListaStavkiZOPM fs = (FormListaStavkiZOPM) getParent();


    public FormIzmenaStavkeZOPM(JDialog parent, boolean modal, StavkaZapisnikaOPrijemuMaterijala s) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Izmena stavke zapisnika o prijemu materijala");
        this.s = s;
        popuniProizvode();
        popuniJM();
        cmbSifraZOPM.getModel().setSelectedItem(s.getZapisnik());
        cmbSifraZOPM.setEnabled(false);
        txtRedniBroj.setText(String.valueOf(s.getRedniBroj()));
        txtRedniBroj.setEnabled(false);
        cmbProizvod.getModel().setSelectedItem(s.getProizvod());
        txtKolicina.setText(String.valueOf(s.getKolicina()));
        cmbJedinica.getModel().setSelectedItem(s.getJedinicaMere());
        
        cmbProizvod.addActionListener((e) -> {
            p = (Proizvod)cmbProizvod.getSelectedItem();
            cmbJedinica.getModel().setSelectedItem(p.getJM());
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbSifraZOPM = new javax.swing.JComboBox();
        txtRedniBroj = new javax.swing.JFormattedTextField();
        cmbProizvod = new javax.swing.JComboBox();
        txtKolicina = new javax.swing.JFormattedTextField();
        cmbJedinica = new javax.swing.JComboBox();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Zapisnik o prijemu mat:");

        jLabel2.setText("Radni broj:");

        jLabel3.setText("Kolicina:");

        jLabel4.setText("Proizvod:");

        jLabel5.setText("Jedinica mere:");

        cmbSifraZOPM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtRedniBroj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));

        cmbProizvod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProizvod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProizvodItemStateChanged(evt);
            }
        });
        cmbProizvod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProizvodActionPerformed(evt);
            }
        });

        txtKolicina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKolicinaActionPerformed(evt);
            }
        });

        cmbJedinica.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnIzmeni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnIzmeni.setText("Izmeni stavku");
        btnIzmeni.setActionCommand("");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbSifraZOPM, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(txtKolicina))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbJedinica, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(84, 84, 84)
                                .addComponent(txtRedniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(42, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(95, 95, 95)
                        .addComponent(cmbProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbSifraZOPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRedniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbJedinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnIzmeni)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbProizvodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProizvodActionPerformed

    }//GEN-LAST:event_cmbProizvodActionPerformed

    private void cmbProizvodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProizvodItemStateChanged

    }//GEN-LAST:event_cmbProizvodItemStateChanged

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed

        try {
            s.setKolicina(Float.parseFloat(txtKolicina.getText()));
            if((Proizvod)cmbProizvod.getSelectedItem() != s.getProizvod()){
                s.setProizvod((Proizvod)cmbProizvod.getSelectedItem());
            }
            else{
                s.setProizvod(null);
            }
            if(((Proizvod)cmbProizvod.getSelectedItem()).getJM() != (JedinicaMere)cmbJedinica.getSelectedItem()){
                s.setJedinicaMere((JedinicaMere)cmbJedinica.getSelectedItem());
            }
            else{
                s.setJedinicaMere(null);
            }
            
            ClientController.getInstance().updateStavkaZOPM(s);
            JOptionPane.showMessageDialog(this, "Uspesno izmenjena stavka.");
            fs.refreshTable();
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
            fs.refreshTable();
            this.dispose();
        }
        
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void txtKolicinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKolicinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKolicinaActionPerformed
       
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JComboBox cmbJedinica;
    private javax.swing.JComboBox cmbProizvod;
    private javax.swing.JComboBox cmbSifraZOPM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JFormattedTextField txtKolicina;
    private javax.swing.JFormattedTextField txtRedniBroj;
    // End of variables declaration//GEN-END:variables

    

    private void popuniProizvode() {
         try {
            ArrayList<Proizvod> proizvodi;
            
            proizvodi = ClientController.getInstance().getAllProizvod();
            cmbProizvod.removeAllItems();
      
            for(Proizvod p: proizvodi){
                cmbProizvod.addItem(p);
            }
        } catch (Exception ex) {
            Logger.getLogger(FormIzmenaStavkeZOPM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniJM() {
         ArrayList<JedinicaMere> jedinice;
        
        try {
            jedinice = ClientController.getInstance().getAllJM();
      
            cmbJedinica.removeAllItems();
            for(JedinicaMere jm: jedinice){
                cmbJedinica.addItem(jm);
            }
        } catch (Exception ex) {
            Logger.getLogger(FormIzmenaStavkeZOPM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
