/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.ZapisnikOPrijemuMaterijala;

import forme.stavkaZapisnikaOPrijemuMaterijala.*;
import controller.ClientController;
import domain.JedinicaMere;
import domain.Proizvod;
import domain.StavkaZapisnikaOPrijemuMaterijala;
import domain.ZapisnikOPrijemuMaterijala;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;



public class FormUnosZOPM extends javax.swing.JDialog {
    
    private Proizvod p;

    public FormUnosZOPM(JDialog parent, boolean modal, ZapisnikOPrijemuMaterijala zap) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Unos stavke zapisnika o prijemu materijala");
        popuniZapisnike();
        popuniProizvode();
        popuniJM();
        cmbZapisnik.getModel().setSelectedItem(zap);
        cmbZapisnik.setEnabled(false);
        cmbJedinica.getModel().setSelectedItem(((Proizvod)cmbProizvod.getSelectedItem()).getJM());
        cmbJedinica.setEnabled(false);
        
        
        cmbProizvod.addActionListener((e) -> {
            p = (Proizvod)cmbProizvod.getSelectedItem();
            cmbJedinica.getModel().setSelectedItem(p.getJM());
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbZapisnik = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbProizvod = new javax.swing.JComboBox();
        txtKolicina = new javax.swing.JFormattedTextField();
        txtRedniBroj = new javax.swing.JFormattedTextField();
        cmbJedinica = new javax.swing.JComboBox();
        btnUnesi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Zapisnik o prijemu mat:");

        cmbZapisnik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Redni broj:");

        jLabel3.setText("Proizvod:");

        jLabel4.setText("Kolicina:");

        jLabel5.setText("Jedinica mere:");

        cmbProizvod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtKolicina.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));

        txtRedniBroj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));

        cmbJedinica.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnUnesi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUnesi.setText("Unesi stavku");
        btnUnesi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnesiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGap(95, 95, 95)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbProizvod, 0, 139, Short.MAX_VALUE)
                                    .addComponent(txtKolicina)
                                    .addComponent(txtRedniBroj)
                                    .addComponent(cmbJedinica, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(45, 45, 45)
                                .addComponent(cmbZapisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btnUnesi, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbZapisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRedniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbJedinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnUnesi)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUnesiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnesiActionPerformed
        try {
            if(txtRedniBroj.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Morate uneti redni broj!");
                return;
            }
            if(txtKolicina.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Morate uneti kolicinu!");
                return;
            }
            ZapisnikOPrijemuMaterijala z = (ZapisnikOPrijemuMaterijala)cmbZapisnik.getSelectedItem();
            int redniBroj = Integer.parseInt(txtRedniBroj.getText());
            Proizvod pro = (Proizvod)cmbProizvod.getSelectedItem();
            Float kolicina = Float.parseFloat(txtKolicina.getText());
            //JedinicaMere jm = (JedinicaMere)cmbJedinica.getSelectedItem();
            
            StavkaZapisnikaOPrijemuMaterijala s = new StavkaZapisnikaOPrijemuMaterijala(z, redniBroj, kolicina, pro, null);
            
            ClientController.getInstance().addStavkaZOPM(s);
            FormListaZOPM ls = (FormListaZOPM) getParent();
            ls.refreshTable();
            JOptionPane.showMessageDialog(this, "Uspesno uneta stavka.");
            this.dispose();
        } catch (Exception ex) {
            //Logger.getLogger(FormUnosZOPM.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
         
    }//GEN-LAST:event_btnUnesiActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUnesi;
    private javax.swing.JComboBox cmbJedinica;
    private javax.swing.JComboBox cmbProizvod;
    private javax.swing.JComboBox cmbZapisnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JFormattedTextField txtKolicina;
    private javax.swing.JFormattedTextField txtRedniBroj;
    // End of variables declaration//GEN-END:variables

private void popuniProizvode() {
         try {
            ArrayList<Proizvod> proizvodi;
            
            proizvodi = ClientController.getInstance().getAllProizvod();
            cmbProizvod.removeAllItems();
      
            for(Proizvod p: proizvodi){
                cmbProizvod.addItem(p);
            }
        } catch (Exception ex) {
            Logger.getLogger(FormIzmenaStavkeZOPM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniJM() {
        ArrayList<JedinicaMere> jedinice;
        
        try {
            jedinice = ClientController.getInstance().getAllJM();
      
            cmbJedinica.removeAllItems();
            for(JedinicaMere jm: jedinice){
                cmbJedinica.addItem(jm);
            }
        } catch (Exception ex) {
            Logger.getLogger(FormIzmenaStavkeZOPM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniZapisnike() {
        ArrayList<ZapisnikOPrijemuMaterijala> zapisnici;
        
        try {
            zapisnici = ClientController.getInstance().getAllZOPM();
      
            cmbZapisnik.removeAllItems();
            for(ZapisnikOPrijemuMaterijala z: zapisnici){
                cmbZapisnik.addItem(z);
            }
        } catch (Exception ex) {
            Logger.getLogger(FormUnosZOPM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
