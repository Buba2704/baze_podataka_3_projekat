/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.radnik;

import controller.ClientController;
import domain.Radnik;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import models.TableModelRadnik;




public class FormListaRadnika extends javax.swing.JDialog {

    /**
     * Creates new form FormListaRadnika
     */
    public FormListaRadnika(JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Lista radnika");
        TableModelRadnik model = new TableModelRadnik();
        Thread th = new Thread();
        th.start();
        tblRadnik.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRadnik = new javax.swing.JTable();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnUnesi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblRadnik.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRadnik);

        btnIzmeni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnIzmeni.setText("Izmeni radnika");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnObrisi.setText("Obrisi radnika");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnUnesi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUnesi.setText("Unesi radnika");
        btnUnesi.setToolTipText("");
        btnUnesi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnesiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnUnesi, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUnesi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
       int row = tblRadnik.getSelectedRow();
       if(row>=0){
           Radnik r = ((TableModelRadnik)tblRadnik.getModel()).getSelectedRadnik(row);
           new FormIzmenaRadnika(this, rootPaneCheckingEnabled, r).setVisible(true);
       }
       else{
           JOptionPane.showMessageDialog(this, "Izaberite radnika kog zelite da izmenite!");
       }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int row = tblRadnik.getSelectedRow();
        
        if(row>=0){
           Radnik r = ((TableModelRadnik)tblRadnik.getModel()).getSelectedRadnik(row);
           int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete ovog radnika?", "Konfirmacija", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.NO_OPTION){
            return;
            }
            if(result == JOptionPane.YES_OPTION){
               try {
                   ClientController.getInstance().deleteRadnik(r);
                   ((TableModelRadnik)tblRadnik.getModel()).refreshTable();
                   JOptionPane.showMessageDialog(this, "Uspesno obrisan radnik."); 
               } catch (Exception ex) {
                   //Logger.getLogger(FormListaRadnika.class.getName()).log(Level.SEVERE, null, ex);
                   JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
               }
            }
            
        } else{
           JOptionPane.showMessageDialog(this, "Izaberite radnika kog zelite da obrisete!");
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnUnesiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnesiActionPerformed
       new FormUnosRadnika(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_btnUnesiActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnUnesi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRadnik;
    // End of variables declaration//GEN-END:variables

    void refreshTable() {
        TableModelRadnik tr = (TableModelRadnik)tblRadnik.getModel();
        tr.refreshTable();
    }
}
