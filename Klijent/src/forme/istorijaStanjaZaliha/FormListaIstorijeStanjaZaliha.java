/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.istorijaStanjaZaliha;

import controller.ClientController;
import domain.IstorijaStanjaZaliha;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import models.TableModelIstorija;



public class FormListaIstorijeStanjaZaliha extends javax.swing.JDialog {

    /**
     * Creates new form FormListaIstorijeStanjaZaliha
     */
    public FormListaIstorijeStanjaZaliha(JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Istorija stanja zaliha");
        TableModelIstorija model = new TableModelIstorija();
        Thread th = new Thread();
        th.start();
        tblIstorija.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIstorija = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblIstorija.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblIstorija);

        btnDodaj.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDodaj.setText("Unesi stanje zaliha");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnIzmeni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnIzmeni.setText("Izmeni stanje zaliha");
        btnIzmeni.setActionCommand("");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnObrisi.setText("Obrisi stanje zaliha");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jLabel1.setText("Pretraga (naziv proizvoda):");

        txtPretraga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtPretragaMouseReleased(evt);
            }
        });
        txtPretraga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtPretraga))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(66, 66, 66)
                            .addComponent(btnIzmeni)
                            .addGap(82, 82, 82)
                            .addComponent(btnObrisi))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        new FormUnosIstorijeStanja(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
       int row = tblIstorija.getSelectedRow();
       if(row>=0){
           IstorijaStanjaZaliha i = ((TableModelIstorija)tblIstorija.getModel()).getSelectedIstorija(row);
            new FormIzmenaIstorijeStanja(this, rootPaneCheckingEnabled, i).setVisible(true);
       }
       else{
           JOptionPane.showMessageDialog(this, "Izaberite stanje zaliha koje zelite da izmenite!");
       }
       
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int row = tblIstorija.getSelectedRow();
        
        if(row>=0){
           IstorijaStanjaZaliha i = ((TableModelIstorija)tblIstorija.getModel()).getSelectedIstorija(row);
           i.setFormatDate(i.getFormatDate());
           int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da obrisete ovo stanje zaliha?", "Konfirmacija", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.NO_OPTION){
                return;
            }
            if(result == JOptionPane.YES_OPTION){
               try {
                   ClientController.getInstance().deleteIstorija(i);
                   ((TableModelIstorija)tblIstorija.getModel()).refreshTable();
                   JOptionPane.showMessageDialog(this, "Uspesno obrisano stanje zaliha."); 
               } catch (Exception ex) {
                   Logger.getLogger(FormListaIstorijeStanjaZaliha.class.getName()).log(Level.SEVERE, null, ex);
               }
            } 
        } else{
           JOptionPane.showMessageDialog(this, "Izaberite stanje zaliha koje zelite da obrisete!");
        } 
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void txtPretragaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPretragaMouseReleased

    }//GEN-LAST:event_txtPretragaMouseReleased

    private void txtPretragaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKeyReleased
        String param = txtPretraga.getText();
        ((TableModelIstorija)tblIstorija.getModel()).setParametar(param);
    }//GEN-LAST:event_txtPretragaKeyReleased

    void refreshTable(){
        TableModelIstorija ti = (TableModelIstorija)tblIstorija.getModel();
        ti.refreshTable();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIstorija;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    void exit() {
       this.dispose();
    }
}
